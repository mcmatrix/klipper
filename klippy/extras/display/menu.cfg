# This file serves as default menu structure.
# See the "example-menu.cfg" file for description of common config parameters.

### DEFAULT MENU ###

### menu default values ###
[menu]
## private ##
defaults_revision: 0
## public ##
# Quick edit: 0 - flow, 1 - speed, 2 - offsetz
default_qedit_popup: 0
# Control
default_axis_x_min: 0
default_axis_y_min: 0
default_axis_z_min: 0
default_axis_e_min: -50
default_axis_x_max: 200
default_axis_y_max: 200
default_axis_z_max: 200
default_axis_e_max: 50
# Temperature
default_hotend_target_max: 250
default_hotbed_target_max: 130
# Preheat
default_preheat_pla_hotend: 200
default_preheat_pla_hotbed: 60
default_preheat_abs_hotend: 245
default_preheat_abs_hotbed: 110
# PID tuning
default_hotend_pid_tuning: 210
default_hotbed_pid_tuning: 60
# Filament
default_filament_load_fast_length: 100
default_filament_load_fast_speed: 1000
default_filament_load_slow_length: 50
default_filament_load_slow_speed: 300
default_filament_unload_fast_length: 100
default_filament_unload_fast_speed: 1000
default_filament_unload_slow_length: 100
default_filament_unload_slow_speed: 1000
default_filament_feed_length: 0
default_filament_feed_speed: 30

### main screen 20 x 4 ###
[menu __screen_2004_base]
type: view
enable: {printer.display.lcd_type in ['hd44780'] and printer.menu.cols <= 20}
name: Screen 20x4
script_render:
    {%- macro animate(glyphs, enable=false) -%}
        {%- set frames = glyphs.split(',') -%}
        {%- set frame = enable and printer.menu.eventtime|int is odd -%}
        {%- if frames|length > 0 -%}
            {%- if enable and frames|length > 1 -%}
                {'~%s%d~' % (frames[1]|trim, (frame + 1))}
            {%- else -%}
                {'~%s~' % (frames[0]|trim,)}
            {%- endif -%}
        {%- endif -%}
    {%- endmacro -%}
    {%- macro heater(name, icon) -%}
        {%- set width = 9 -%}
        {%- set anim = printer.display.lcd_type not in ['hd44780'] -%}
        {%- if name in printer -%}
            {animate(icon, (anim and printer[name].target))}{"%3d" % printer[name].temperature}/{"%3d" % printer[name].target}~degrees~
        {%- else -%}
            {' ' * width}
        {%- endif -%}
    {%- endmacro -%}
    {%- macro clock() -%}
        {%- set time = printer.toolhead.printing_time -%}
        {%- if printer.idle_timeout.state != "Printing" -%}
            ~clock~{"--:--"}
        {%- else -%}
            ~clock~{"%02d:%02d" % (time//3600, (time%3600)//60)}
        {%- endif -%}
    {%- endmacro -%}
    {%- macro progress() -%}
        {%- set use_text = printer.display.lcd_type not in ['hd44780'] -%}
        {%- if printer.idle_timeout.state != "Printing" -%}
            {'USB:' if use_text else '~usb~'}{"---%"}
        {%- elif 'virtual_sdcard' in printer and (printer.virtual_sdcard.progress and not printer.display.progress) -%}
            {'SD :' if use_text else '~sd~'}{"%3d" % printer.virtual_sdcard.progress}%
        {%- else -%}
            {'USB:' if use_text else '~usb~'}{"%3d" % printer.display.progress}%
        {%- endif -%}
    {%- endmacro -%}
    {%- macro message() -%}
        {%- if printer.display.message -%}
            {printer.display.message}
        {%- elif printer.idle_timeout.state == "Printing" -%}
            X{"%-4.0f" % printer.toolhead.position.x}Y{"%-4.0f" % printer.toolhead.position.y}Z{"%-5.2f" % printer.toolhead.position.z}
        {%- else -%}
            {printer.idle_timeout.state}
        {%- endif -%}
    {%- endmacro -%}
    `{heater('extruder', 'extruder')} {heater('heater_bed', 'bed')}
    `{heater('extruder1', 'extruder')} ~fan~{'%3d%%' % (100.0 * printer.fan.speed)}
    `~feedrate~{"%3d%%" % (100.0 * printer.gcode.speed_factor)}   {progress()} {clock()}
    `{message()}
popup_main: __main
popup_flow: __flowscreen
popup_feed: __feedscreen
popup_offsetz: __offsetzscreen
autorun: true
script_shortpress:
    {run.popup('main')}
script_dblpress:
    {%- if printer.menu.default.qedit_popup|int == 0 -%}
        {run.popup('flow')}
    {%- elif printer.menu.default.qedit_popup|int == 1 -%}
        {run.popup('speed')}
    {%- elif printer.menu.default.qedit_popup|int == 2 -%}
        {run.popup('offsetz')}
    {%- endif -%}

### main screen 16 x 4 ###
[menu __screen_1604_base]
type: view
enable: {printer.display.lcd_type not in ['hd44780'] and printer.menu.cols <= 16}
name: Screen 16x4
script_render:
    {%- from script.by_name('render', '__screen_2004_base') import animate, heater, progress, clock, message with context -%}
    `{heater('extruder', 'extruder')}{animate('fan1, fan', printer.fan.speed)}{'%3d%%' % (100.0 * printer.fan.speed)}
    `{heater('heater_bed', 'bed, bed_heat')}~feedrate~{"%3d%%" % (100.0 * printer.gcode.speed_factor)}
    `{progress()}   {clock()}
    `{message()}
popup_main: __main
popup_flow: __flowscreen
popup_feed: __feedscreen
popup_offsetz: __offsetzscreen
autorun: true
script_shortpress:
    {run.popup('main')}
script_dblpress:
    {%- include script.by_name('dblpress', '__screen_2004_base') with context -%}

### main screen fallback ###
[menu __screen_fallback_base]
type: view
name: Screen fallback
script_render:
    Screen not found!

[menu __flowscreen]
type: view
name: Flow quickedit
initial: 0
script_render:
    {%- set width = 10 -%}
    {%- set centre = (printer.menu.cols - width) // 2 -%}
    `{' '*centre}{'='*width}
    `{' '*centre}<?item:.__flow?>
    `{' '*centre}{'='*width}

[menu __flowscreen __flow]
type: input
name: Flow: {'%3d' % (me.input*100)}%
input: {printer.gcode.extrude_factor}
input_min: 0
input_max: 2
input_step: 0.01
use_cursor: False
use_blinking: True
blinking_mask: ++++++...+
script_select:
    {run.start_editing()}
script_change:
    M221 S{'%d' % (me.input*100)}
script_shortpress:
    {script.prevent_default()}
    {run.menu.back(True)}

[menu __feedscreen]
type: view
name: Feed quickedit
initial: 0
script_render:
    {%- set width = 11 -%}
    {%- set centre = (printer.menu.cols - width) // 2 -%}
    `{' '*centre}{'='*width}
    `{' '*centre}<?item:.__feed?>
    `{' '*centre}{'='*width}

[menu __feedscreen __feed]
type: input
name: Speed: {'%3d' % (me.input*100)}%
input: {printer.gcode.speed_factor}
input_min: 0
input_max: 2
input_step: 0.01
use_cursor: False
use_blinking: True
blinking_mask: +++++++...+
script_select:
    {run.start_editing()}
script_change:
    M220 S{'%d' % (me.input*100)}
script_shortpress:
    {script.prevent_default()}
    {run.menu.back(True)}

[menu __offsetzscreen]
type: view
name: Offset Z quickedit
initial: 0
script_render:
    {%- set width = 14 -%}
    {%- set centre = (printer.menu.cols - width) // 2 -%}
    `{' '*centre}{'='*width}
    `{' '*centre}<?item:.__offsetz?>
    `{' '*centre}{'='*width}

[menu __offsetzscreen __offsetz]
type: input
name: Offset Z:{'%05.3f' % me.input}
input: {printer.gcode.homing_zpos}
input_min: -5
input_max: 5
input_step: 0.005
use_cursor: False
use_blinking: True
blinking_mask: +++++++++
script_select:
    {run.start_editing()}
script_change:
    SET_GCODE_OFFSET Z={'%.3f' % me.input}
script_shortpress:
    {script.prevent_default()}
    {run.menu.back(True)}

### menu main ###
[menu __main]
type: view
name: Main Menu
script_render:
    <?back: ..?>
    {% for name in me.runtime_names -%}
        <?name:{name}?>
    {% endfor -%}
items:
    __tune
    __octoprint
    __sdcard
    __control
    __temp
    __filament
    __setup
    __varia

### menu tune ###
[menu __tune]
type: view
enable: {printer.idle_timeout.state == "Printing"}
name: Tune
script_render:
    <?back: ..?>
    <?item:.__speed?>
    <?item:.__flow?>
    <?item:.__offsetz?>

[menu __tune __speed]
type: input
name: Speed: {'%3d' % (me.input*100)}%
input: {printer.gcode.speed_factor}
input_min: 0
input_max: 2
input_step: 0.01
script_change:
    M220 S{'%d' % (me.input*100)}

[menu __tune __flow]
type: input
name: Flow: {'%3d' % (me.input*100)}%
input: {printer.gcode.extrude_factor}
input_min: 0
input_max: 2
input_step: 0.01
script_change:
    M221 S{'%d' % (me.input*100)}

[menu __tune __offsetz]
type: input
name: Offset Z:{'%05.3f' % me.input}
input: {printer.gcode.homing_zpos}
input_min: -5
input_max: 5
input_step: 0.005
script_change:
    SET_GCODE_OFFSET Z={'%.3f' % me.input}


### menu octoprint ###
[menu __octoprint]
type: view
name: OctoPrint
script_render:
    <?back:..?>
    <?item:.__pause?>
    <?item:.__resume?>
    <?item:.__abort?>
    {% for name in me.runtime_names -%}
        <?name:{name}?>
    {% endfor -%}

[menu __octoprint __pause]
type: item
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
script_shortpress:
    {printer.gcode.action_respond_info('action:pause')}

[menu __octoprint __resume]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
script_shortpress:
    {printer.gcode.action_respond_info('action:resume')}

[menu __octoprint __abort]
type: item
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
script_shortpress:
    {printer.gcode.action_respond_info('action:cancel')}

### menu virtual sdcard ###
[menu __sdcard]
type: vsdview
name: SD Card
script_render:
    <?back:..?>
    <?item:.__start?>
    <?item:.__resume?>
    <?item:.__pause?>
    {% for name in me.runtime_names -%}
        <?name:{name}?>
    {% endfor -%}

[menu __sdcard __start]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Start printing
script_shortpress: M24

[menu __sdcard __resume]
type: item
enable: {printer.idle_timeout.state == "Printing"}
name: Resume printing
script_shortpress: M24

[menu __sdcard __pause]
type: item
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
script_shortpress: M25

### menu control ###
[menu __control]
type: view
name: Control
script_render:
    <?back:..?>
    <?item:.__home?>
    <?item:.__homez?>
    <?item:.__homexy?>
    <?item:.__move_10mm?>
    <?item:.__move_1mm?>
    <?item:.__move_01mm?>
    <?item:.__disable?>
    <?item:.__fanonoff?>
    <?item:.__fanspeed?>
    <?item:.__caselightonoff?>
    <?item:.__caselightpwm?>

[menu __control __home]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Home All
script_shortpress: G28

[menu __control __homez]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Home Z
script_shortpress: G28 Z

[menu __control __homexy]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Home X/Y
script_shortpress: G28 X Y

[menu __control __disable]
type: item
name: Disable steppers
script_shortpress:
    M84
    M18

[menu __control __fanonoff]
type: input
enable: {'fan' in printer}
name: Fan {'ON ' if me.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
script_shortpress:
    M106 S{255 if me.input else 0}

[menu __control __fanspeed]
type: input
enable: {'fan' in printer}
name: Fan speed: {'%3d' % (me.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
script_shortpress:
    M106 S{'%d' % (me.input*255)}

[menu __control __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Case light: {'ON ' if me.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
script_shortpress:
    SET_PIN PIN=caselight VALUE={1 if me.input else 0}

[menu __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Case light:{'%3d' % (me.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
script_shortpress:
    SET_PIN PIN=caselight VALUE={me.input}

### menu move 10mm ###
[menu __control __move_10mm]
type: view
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 10mm
script_render:
    <?back:..?>
    <?item:.__axis_z?>
    <?item:.__axis_x?> <?item:.__axis_y?>
    <?item:.__axis_e?>

[menu __control __move_10mm __axis_x]
type: input
name: X:{'%05.1f' % me.input}
input: {printer.toolhead.position.x}
input_min: {printer.menu.default.axis_x_min}
input_max: {printer.menu.default.axis_x_max}
input_step: 10.0
script_shortpress:
    G90
    G1 X{me.input}

[menu __control __move_10mm __axis_y]
type: input
name: Y:{'%05.1f' % me.input}
input: {printer.toolhead.position.y}
input_min: {printer.menu.default.axis_y_min}
input_max: {printer.menu.default.axis_y_max}
input_step: 10.0
script_shortpress:
    G90
    G1 Y{me.input}

[menu __control __move_10mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % me.input}
input: {printer.toolhead.position.z}
input_min: {printer.menu.default.axis_z_min}
input_max: {printer.menu.default.axis_z_max}
input_step: 10.0
script_shortpress:
    G90
    G1 Z{me.input}

[menu __control __move_10mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % me.input}
input: 0
input_min: {printer.menu.default.axis_e_min}
input_max: {printer.menu.default.axis_e_max}
input_step: 10.0
script_shortpress:
    M83
    G1 E{me.input} F240

### menu move 1mm ###
[menu __control __move_1mm]
type: view
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 1mm
script_render:
    <?back:..?>
    <?item:.__axis_z?>
    <?item:.__axis_x?> <?item:.__axis_y?>
    <?item:.__axis_e?>

[menu __control __move_1mm __axis_x]
type: input
name: X:{'%05.1f' % me.input}
input: {printer.toolhead.position.x}
input_min: {printer.menu.default.axis_x_min}
input_max: {printer.menu.default.axis_x_max}
input_step: 1.0
script_shortpress:
    G90
    G1 X{me.input}

[menu __control __move_1mm __axis_y]
type: input
name: Y:{'%05.1f' % me.input}
input: {printer.toolhead.position.y}
input_min: {printer.menu.default.axis_y_min}
input_max: {printer.menu.default.axis_y_max}
input_step: 1.0
script_shortpress:
    G90
    G1 Y{me.input}

[menu __control __move_1mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % me.input}
input: {printer.toolhead.position.z}
input_min: {printer.menu.default.axis_z_min}
input_max: {printer.menu.default.axis_z_max}
input_step: 1.0
script_shortpress:
    G90
    G1 Z{me.input}

[menu __control __move_1mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % me.input}
input: 0
input_min: {printer.menu.default.axis_e_min}
input_max: {printer.menu.default.axis_e_max}
input_step: 1.0
script_shortpress:
    M83
    G1 E{me.input} F240

### menu move 0.1mm ###
[menu __control __move_01mm]
type: view
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 0.1mm
script_render:
    <?back:..?>
    <?item:.__axis_z?>
    <?item:.__axis_x?> <?item:.__axis_y?>
    <?item:.__axis_e?>

[menu __control __move_01mm __axis_x]
type: input
name: X:{'%05.1f' % me.input}
input: {printer.toolhead.position.x}
input_min: {printer.menu.default.axis_x_min}
input_max: {printer.menu.default.axis_x_max}
input_step: 0.1
script_shortpress:
    G90
    G1 X{me.input}

[menu __control __move_01mm __axis_y]
type: input
name: Y:{'%05.1f' % me.input}
input: {printer.toolhead.position.y}
input_min: {printer.menu.default.axis_y_min}
input_max: {printer.menu.default.axis_y_max}
input_step: 0.1
script_shortpress:
    G90
    G1 Y{me.input}

[menu __control __move_01mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % me.input}
input: {printer.toolhead.position.z}
input_min: {printer.menu.default.axis_z_min}
input_max: {printer.menu.default.axis_z_max}
input_step: 0.1
script_shortpress:
    G90
    G1 Z{me.input}

[menu __control __move_01mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % me.input}
input: 0
input_min: {printer.menu.default.axis_e_min}
input_max: {printer.menu.default.axis_e_max}
input_step: 0.1
script_shortpress:
    M83
    G1 E{me.input} F240

### menu temperature ###
[menu __temp]
type: view
name: Temperature
script_render:
    <?back:..?>
    {% if 'extruder' in printer -%}
    ` Ex0:{'%4.0f' % printer.extruder.temperature} <?item:.__hotend0_target?>
    {%- endif %}
    {% if 'extruder1' in printer -%}
    ` Ex1:{'%4.0f' % printer.extruder1.temperature} <?item:.__hotend1_target?>
    {%- endif %}
    {% if 'heater_bed' in printer -%}
    ` Bed:{'%4.0f' % printer.heater_bed.temperature} <?item:.__hotbed_target?>
    {%- endif %}
    <?item:.__preheat_pla?>
    <?item:.__preheat_abs?>
    <?item:.__cooldown?>

[menu __temp __hotend0_target]
type: input
enable: {'extruder' in printer}
name: {"T:%4.0f" % me.input}
use_blinking: true
blinking_mask: ++
input: {printer.extruder.target}
input_min: 0
input_max: {printer.menu.default.hotend_target_max}
input_step: 1
input_step2: 10
script_shortpress: M104 T0 S{'%.0f' % me.input}

[menu __temp __hotend1_target]
type: input
enable: {'extruder1' in printer}
name: {"T:%4.0f" % me.input}
use_blinking: true
blinking_mask: ++
input: {printer.extruder1.target}
input_min: 0
input_max: {printer.menu.default.hotend_target_max}
input_step: 1
input_step2: 10
script_shortpress: M104 T1 S{'%.0f' % me.input}

[menu __temp __hotbed_target]
type: input
enable: {'heater_bed' in printer}
use_blinking: true
blinking_mask: ++
name: {"T:%4.0f" % me.input}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.menu.default.hotbed_target_max}
input_step: 1
input_step2: 10
script_shortpress: M140 S{'%.0f' % me.input}

[menu __temp __preheat_pla]
type: view
name: Preheat PLA
script_render:
    <?back:..?>
    <?item:.__all?>
    <?item:.__hotend?>
    <?item:.__hotbed?>

[menu __temp __preheat_pla __all]
type: item
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
script_shortpress:
    M140 S{printer.menu.default.preheat_pla_hotbed}
    M104 S{printer.menu.default.preheat_pla_hotend}

[menu __temp __preheat_pla __hotend]
type: item
enable: {'extruder' in printer}
name: Preheat hotend
script_shortpress: M104 S{printer.menu.default.preheat_pla_hotend}

[menu __temp __preheat_pla __hotbed]
type: item
enable: {'heater_bed' in printer}
name: Preheat hotbed
script_shortpress: M140 S{printer.menu.default.preheat_pla_hotbed}

[menu __temp __preheat_abs]
type: view
name: Preheat ABS
script_render:
    <?back:..?>
    <?item:.__all?>
    <?item:.__hotend?>
    <?item:.__hotbed?>

[menu __temp __preheat_abs __all]
type: item
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
script_shortpress:
    M140 S{printer.menu.default.preheat_abs_hotbed}
    M104 S{printer.menu.default.preheat_abs_hotend}

[menu __temp __preheat_abs __hotend]
type: item
enable: {'extruder' in printer}
name: Preheat hotend
script_shortpress: M104 S{printer.menu.default.preheat_abs_hotend}

[menu __temp __preheat_abs __hotbed]
type: item
enable: {'heater_bed' in printer}
name: Preheat hotbed
script_shortpress: M140 S{printer.menu.default.preheat_abs_hotbed}

[menu __temp __cooldown]
type: view
name: Cooldown
script_render:
    <?back:..?>
    <?item:.__all?>
    <?item:.__hotend?>
    <?item:.__hotbed?>

[menu __temp __cooldown __all]
type: item
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Cooldown all
script_shortpress:
    M104 S0
    M140 S0

[menu __temp __cooldown __hotend]
type: item
enable: {'extruder' in printer}
name: Cooldown hotend
script_shortpress: M104 S0

[menu __temp __cooldown __hotbed]
type: item
enable: {'heater_bed' in printer}
name: Cooldown hotbed
script_shortpress: M140 S0

### menu filament ###

[menu __filament]
type: view
name: Filament
script_macros:
    {%- macro slice_move(length, speed, sign='') -%}
        {%- set slice_length = 50 -%}
        {%- set ns = namespace(length=length) -%}
        {%- for n in range(ns.length // slice_length) -%}
            {%- set ns.length = (ns.length - slice_length) -%}
            G1 E{sign}{slice_length} F{speed}{'\n'}
        {%- endfor -%}
        {%- if ns.length > 0 -%}
            G1 E{sign}{ns.length} F{speed}
        {%- endif -%}
    {%- endmacro -%}
script_render:
    <?back:..?>
    {% if 'extruder' in printer -%}
    ` Ex0:{'%4.0f' % printer.extruder.temperature} <?item:__temp __hotend0_target?>
    {%- endif %}
    <?item:.__unload?>
    <?item:.__load?>
    <?item:.__feed?>

[menu __filament __load]
type: item
name: Load Filament
script_shortpress:
    {% import script.by_name('macros', '..') as con %}
    M83
    {con.slice_move(printer.menu.default.filament_load_fast_length, printer.menu.default.filament_load_fast_speed)}
    {con.slice_move(printer.menu.default.filament_load_slow_length, printer.menu.default.filament_load_slow_speed)}
    M82

[menu __filament __unload]
type: item
name: Unload Filament
script_shortpress:
    {% import script.by_name('macros', '..') as con %}
    M83
    {con.slice_move(printer.menu.default.filament_unload_fast_length, printer.menu.default.filament_unload_fast_speed, '-')}
    {con.slice_move(printer.menu.default.filament_unload_slow_length, printer.menu.default.filament_unload_slow_speed, '-')}
    M82

[menu __filament __feed]
type: input
name: Feed: {'%.1f' % me.input}
input: {printer.menu.default.filament_feed_length}
input_step: 0.1
script_shortpress:
    M83
    G1 E{'%.1f' % me.input} F{printer.menu.default.filament_feed_speed}

### menu setup ###
[menu __setup]
type: view
enable: {not printer.idle_timeout.state == "Printing"}
name: Setup
script_render:
    <?back:..?>
    <?item:.__defaults?>
    <?item:.__calib?>
    <?item:.__tuning?>
    <?item:.__save_config?>
    <?item:.__restart?>

[menu __setup __save_config]
type: item
name: Save config
script_shortpress: SAVE_CONFIG

[menu __setup __restart]
type: view
name: Restart
script_render:
    <?back:..?>
    <?item:.__host_restart?>
    <?item:.__firmware_restart?>

[menu __setup __restart __host_restart]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart host
script_shortpress: RESTART

[menu __setup __restart __firmware_restart]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart FW
script_shortpress: FIRMWARE_RESTART

[menu __setup __tuning]
type: view
name: PID tuning
script_render:
    <?back:..?>
    <?item:.__hotend_pid_tuning?>
    <?item:.__hotbed_pid_tuning?>

[menu __setup __tuning __hotend_pid_tuning]
type: item
enable: {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name: Tune Hotend PID
script_shortpress: PID_CALIBRATE HEATER=extruder TARGET={printer.menu.default.hotend_pid_tuning} WRITE_FILE=1

[menu __setup __tuning __hotbed_pid_tuning]
type: item
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: Tune Hotbed PID
script_shortpress: PID_CALIBRATE HEATER=heater_bed TARGET={printer.menu.default.hotbed_pid_tuning} WRITE_FILE=1

[menu __setup __calib]
type: view
name: Calibration
script_render:
    <?back:..?>
    <?item:.__delta_calib?>
    <?item:.__bedprobe?>

[menu __setup __calib __delta_calib]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Delta calibrate
script_shortpress: DELTA_CALIBRATE

[menu __setup __calib __bedprobe]
type: item
enable: {not printer.idle_timeout.state == "Printing"}
name: Bed probe
script_shortpress: PROBE

[menu __setup __defaults]
type: view
name: Edit defaults
script_render:
    <?back:..?>
    <?item:.__control?>
    <?item:.__temperature?>
    <?item:.__preheat?>
    <?item:.__tuning?>
    <?item:.__filament?>
    <?item:.__qedit?>
    <?item:.__reset?>

[menu __setup __defaults __reset]
type: item
name: Reset defaults
script_shortpress: {printer.menu.action_reset_defaults()}

[menu __setup __defaults __qedit]
type: input
enable: {'qedit_popup' in printer.menu.default}
name: Quick menu:{('Flow ','Speed','OffsZ')[printer.menu.default_qedit_popup] if printer.menu.default_qedit_popup < 3 else '-----'}
input: {printer.menu.default.qedit_popup}
input_min: 0
input_max: 2
input_step: 1
script_shortpress:
    {printer.menu.action_set_default('qedit_popup', me.input)}

[menu __setup __defaults __control]
type: view
name: Edit controls
script_render:
    <?back:..?>
    <?item:.__axis_x_min?>
    <?item:.__axis_x_max?>
    <?item:.__axis_y_min?>
    <?item:.__axis_y_max?>
    <?item:.__axis_z_min?>
    <?item:.__axis_z_max?>
    <?item:.__axis_e_min?>
    <?item:.__axis_e_max?>

[menu __setup __defaults __control __axis_x_min]
type: input
enable: {'axis_x_min' in printer.menu.default}
name: X min:{'%05.1f' % me.input}
input: {printer.menu.default.axis_x_min}
input_step: .1
input_step2: 1
script_shortpress: {printer.menu.action_set_default('axis_x_min', me.input)}

[menu __setup __defaults __control __axis_x_max]
type: input
enable: {'axis_x_max' in printer.menu.default}
name: X max:{'%05.1f' % me.input}
input: {printer.menu.default.axis_x_max}
input_step: .1
input_step2: 1
script_shortpress: {printer.menu.action_set_default('axis_x_max', me.input)}

[menu __setup __defaults __control __axis_y_min]
type: input
enable: {'axis_y_min' in printer.menu.default}
name: Y min:{'%05.1f' % me.input}
input: {printer.menu.default.axis_y_min}
input_step: .1
input_step2: 1
script_shortpress: {printer.menu.action_set_default('axis_y_min', me.input)}

[menu __setup __defaults __control __axis_y_max]
type: input
enable: {'axis_y_max' in printer.menu.default}
name: Y max:{'%05.1f' % me.input}
input: {printer.menu.default.axis_y_max}
input_step: .1
input_step2: 1
script_shortpress: {printer.menu.action_set_default('axis_y_max', me.input)}

[menu __setup __defaults __control __axis_z_min]
type: input
enable: {'axis_z_min' in printer.menu.default}
name: Z min:{'%05.1f' % me.input}
input: {printer.menu.default.axis_z_min}
input_step: .1
input_step2: 1
script_shortpress: {printer.menu.action_set_default('axis_z_min', me.input)}

[menu __setup __defaults __control __axis_z_max]
type: input
enable: {'axis_z_max' in printer.menu.default}
name: Z max:{'%05.1f' % me.input}
input: {printer.menu.default.axis_z_max}
input_step: .1
input_step2: 1
script_shortpress: {printer.menu.action_set_default('axis_z_max', me.input)}

[menu __setup __defaults __control __axis_e_min]
type: input
enable: {'axis_e_min' in printer.menu.default}
name: E min:{'%05.1f' % me.input}
input: {printer.menu.default.axis_e_min}
input_step: .1
input_step2: 1
script_shortpress: {printer.menu.action_set_default('axis_e_min', me.input)}

[menu __setup __defaults __control __axis_e_max]
type: input
enable: {'axis_e_max' in printer.menu.default}
name: E max:{'%05.1f' % me.input}
input: {printer.menu.default.axis_e_max}
input_step: .1
input_step2: 1
script_shortpress: {printer.menu.action_set_default('axis_e_max', me.input)}

[menu __setup __defaults __temperature]
type: view
name: Edit temp.
script_render:
    <?back:..?>
    <?item:.__hotend_target_max?>
    <?item:.__hotbed_target_max?>

[menu __setup __defaults __temperature __hotend_target_max]
type: input
enable: {'hotend_target_max' in printer.menu.default}
name: Hotend max:{'%4.0f' % me.input}
input: {printer.menu.default.hotend_target_max}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('hotend_target_max', me.input)}

[menu __setup __defaults __temperature __hotbed_target_max]
type: input
enable: {'hotbed_target_max' in printer.menu.default}
name: Hotbed max:{'%4.0f' % me.input}
input: {printer.menu.default.hotbed_target_max}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('hotbed_target_max', me.input)}

[menu __setup __defaults __preheat]
type: view
name: Edit preheat
script_render:
    <?back:..?>
    <?item:.__pla_hotend?>
    <?item:.__pla_hotbed?>
    <?item:.__abs_hotend?>
    <?item:.__abs_hotbed?>

[menu __setup __defaults __preheat __pla_hotend]
type: input
enable: {'preheat_pla_hotend' in printer.menu.default}
name: PLA hotend:{'%4.0f' % me.input}
input: {printer.menu.default.preheat_pla_hotend}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('preheat_pla_hotend', me.input)}

[menu __setup __defaults __preheat __pla_hotbed]
type: input
enable: {'preheat_pla_hotbed' in printer.menu.default}
name: PLA hotbed:{'%4.0f' % me.input}
input: {printer.menu.default.preheat_pla_hotbed}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('preheat_pla_hotbed', me.input)}

[menu __setup __defaults __preheat __abs_hotend]
type: input
enable: {'preheat_abs_hotend' in printer.menu.default}
name: ABS hotend:{'%4.0f' % me.input}
input: {printer.menu.default.preheat_abs_hotend}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('preheat_abs_hotend', me.input)}

[menu __setup __defaults __preheat __abs_hotbed]
type: input
enable: {'preheat_abs_hotbed' in printer.menu.default}
name: ABS hotbed:{'%4.0f' % me.input}
input: {printer.menu.default.preheat_abs_hotbed}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('preheat_abs_hotbed', me.input)}

[menu __setup __defaults __tuning]
type: view
name: Edit PID tuning
script_render:
    <?back:..?>
    <?item:.__hotend_tuning?>
    <?item:.__hotbed_tuning?>

[menu __setup __defaults __tuning __hotend_tuning]
type: input
enable: {'hotend_pid_tuning' in printer.menu.default}
name: Hotend temp:{'%4.0f' % me.input}
input: {printer.menu.default.hotend_pid_tuning}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('hotend_pid_tuning', me.input)}

[menu __setup __defaults __tuning __hotbed_tuning]
type: input
enable: {'hotbed_pid_tuning' in printer.menu.default}
name: Hotbed temp:{'%4.0f' % me.input}
input: {printer.menu.default.hotbed_pid_tuning}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('hotbed_pid_tuning', me.input)}

[menu __setup __defaults __filament]
type: view
name: Edit filament
script_render:
    <?back:..?>
    <?item:.__feed_length?>
    <?item:.__feed_speed?>
    <?item:.__load?>
    <?item:.__unload?>

[menu __setup __defaults __filament __feed_length]
type: input
enable: {'filament_feed_length' in printer.menu.default}
name: Feed len:{'%04d' % me.input}
input: {printer.menu.default.filament_feed_length}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_feed_length', me.input)}

[menu __setup __defaults __filament __feed_speed]
type: input
enable: {'filament_feed_speed' in printer.menu.default}
name: Feed spd:{'%04d' % me.input}
input: {printer.menu.default.filament_feed_speed}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_feed_speed', me.input)}

[menu __setup __defaults __filament __load]
type: view
name: Edit load
script_render:
    <?back:..?>
    <?item:.__fast_length?>
    <?item:.__fast_speed?>
    <?item:.__slow_length?>
    <?item:.__slow_speed?>

[menu __setup __defaults __filament __load __fast_length]
type: input
enable: {'filament_load_fast_length' in printer.menu.default}
name: Fast len:{'%05d' % me.input}
input: {printer.menu.default.filament_load_fast_length}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_load_fast_length', me.input)}

[menu __setup __defaults __filament __load __fast_speed]
type: input
enable: {'filament_load_fast_speed' in printer.menu.default}
name: Fast spd:{'%05d' % me.input}
input: {printer.menu.default.filament_load_fast_speed}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_load_fast_speed', me.input)}

[menu __setup __defaults __filament __load __slow_length]
type: input
enable: {'filament_load_slow_length' in printer.menu.default}
name: Slow len:{'%05d' % me.input}
input: {printer.menu.default.filament_load_slow_length}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_load_slow_length', me.input)}

[menu __setup __defaults __filament __load __slow_speed]
type: input
enable: {'filament_load_slow_speed' in printer.menu.default}
name: Slow spd:{'%05d' % me.input}
input: {printer.menu.default.filament_load_slow_speed}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_load_slow_speed', me.input)}

[menu __setup __defaults __filament __unload]
type: view
name: Edit unload
script_render:
    <?back:..?>
    <?item:.__fast_length?>
    <?item:.__fast_speed?>
    <?item:.__slow_length?>
    <?item:.__slow_speed?>

[menu __setup __defaults __filament __unload __fast_length]
type: input
enable: {'filament_unload_fast_length' in printer.menu.default}
name: Fast len:{'%05d' % me.input}
input: {printer.menu.default.filament_unload_fast_length}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_unload_fast_length', me.input)}

[menu __setup __defaults __filament __unload __fast_speed]
type: input
enable: {'filament_unload_fast_speed' in printer.menu.default}
name: Fast spd:{'%05d' % me.input}
input: {printer.menu.default.filament_unload_fast_speed}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_unload_fast_speed', me.input)}

[menu __setup __defaults __filament __unload __slow_length]
type: input
enable: {'filament_unload_slow_length' in printer.menu.default}
name: Slow len:{'%05d' % me.input}
input: {printer.menu.default.filament_unload_slow_length}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_unload_slow_length', me.input)}

[menu __setup __defaults __filament __unload __slow_speed]
type: input
enable: {'filament_unload_slow_speed' in printer.menu.default}
name: Slow spd:{'%05d' % me.input}
input: {printer.menu.default.filament_unload_slow_speed}
input_step: 1
input_step2: 10
script_shortpress: {printer.menu.action_set_default('filament_unload_slow_speed', me.input)}

### varia menu ###
[menu __varia]
type: view
name: Varia
script_render:
    <?back:..?>
    <?item:.__scroll?>
    <?item:.__dump?>

[menu __varia __scroll]
type: item
name: This is very long item name
width: 18
scroll: true

[menu __varia __dump]
type: item
name: Dump parameters
script_shortpress:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { printer.gcode.action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
      {% else %}
         { printer.gcode.action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}
