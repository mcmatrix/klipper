# This file serves as documentation for config parameters. One may
# copy and edit this file to configure a new menu layout.
# The snippets in this file may be copied into the main printer.cfg file.
# See the "example.cfg" file for description of common config parameters.

# Available menu elements: 
#	item - purely visual element
#	command - same like 'item' but with gcode trigger
#	input - same like 'command' but has value changing capabilities
#	list - menu element container, with entry and exit gcode triggers
#	vsdcard - same as 'list' but will append files from virtual sdcard
#	deck - special container for custom screens (cards) has entry and exit gcode triggers.
#	card - special content card for custom screens. Can only be used in 'deck'!

#[menu item1]
#type: item
#	Type will determine menu item properties and behaviours:
#name: 
#	This is mandatory attribute for every menu element.
#	You can use Python output formatting for parameter and transform values.
#	Quotes can be used in the beginning and end of name.
#cursor:
#	It allows to change cursor character for selected menu element. 
#	Default value is > [Optional]
#width:
#	This attribute accepts integer value. Element name is cut to this width. [Optional]
#scroll:
#	This attribute accepts static boolean value. You can use it together with 'width'.
#	When this is enabled then names longer than width are scrolled back and forth. 
#	By default it's disabled. [Optional]
#enable:
#	This attribute accepts static boolean values and parameters (converted to boolean).
#	It accepts multiple logical expressions. Values separated by comma will return True if all elements are true.
#	Values on different lines will return True if any element is true. 
#	You can use logical negation by using character ! as parameter prefix.
#parameter:
#	This parameter accepts single float value or special variable. 
#	All available parameter variables can be listed by 'MENU DO=dump' gcode, menu itself must be running.
#	This value is available for output formatting as {0}
#transform:
#	This attribute allows to transform parameter value to something else. 
#	More than one transformation can be added. Each transformation must be on separate line.
#	These transformed values are available for output formatting as {1}..{x}
#
#	(fromLow,fromHigh,toLow,toHigh) - interpolate re-maps a parameter value from one range to another.
#	Output value type is taken from toHigh. It can be int or float.
#
#	(e1,e2) - boolean chooser, will convert parameter value to boolean type (index 0 and 1), 
#	and will choose corresponding value from list.
#
#	[e1,e2,...] - int chooser, will convert parameter value to int type and will 
#	choose corresponding value by index from list.
#
#	int, float, bool, str, abs, bin, hex, oct, days, hours, minutes, seconds
#	These will convert parameter value to special form.
#	int,float,bool,str,abs,bin,hex and oct are python functions.
#	days,hours,minutes,seconds will convert parameter value (it's taken as seconds) to time specific value
#
#	pure interger or float value is used as parameter value scaler/multiplier
#
#	{key:value,..} special dictionary chooser, parameter value cast type by first key type

#[menu command1]
#type:command
#name:
#cursor:
#width:
#scroll:
#enable:
#parameter:
#transform:
#gcode:
#	When menu element is clicked then gcodes on this attribute will be executed.
#	Can have multiline gcode script and supports output formatting for parameter and transform values.
#action:
#	Special action can be executed. Currently only supports [back, exit] menu commands

#[menu input1]
#name:
#cursor:
#width:
#enable:
#transform:
#parameter:
#	Value from parameter is taken as input value when in edit mode.
#gcode:
#	This will be triggered on exit from edit mode.
#reverse:
#	This attribute accepts static boolean value. When enabled it will reverse increment and decrement directions for input.
#	By default it's disabled. [Optional]
#readonly:
#	This attribute accepts same logical expression as 'enable'. [Optional]
#	When true then input element is readonly like 'item' and cannot enter to edit mode.
#input_min:
#	It accepts integer or float value. Will set minimal bound for edit value. [Optional]
#input_max:
#	It accepts integer or float value. Will set maximal bound for edit value. [Optional]
#input_step:
#	It accepts positive integer or float value. Will determine increment 
#	and decrement steps for edit value. [Required]

#[menu list1]
#type:list or vsdcard
#name:
#cursor:
#width:
#scroll:
#enable:
#enter_gcode:
#	Will trigger gcode script when entering to this menu container. [Optional]
#leave_gcode:
#	Will trigger gcode script when leaving from this menu container. [Optional]
#show_back:
#	This attribute accepts static boolean value.
#	Show back [..] as first element. [Optional]
#	By default it's enabled
#show_title:
#	This attribute accepts static boolean value.
#	Show container name next to back [..] element. [Optional]
#	By default it's enabled
#items:
#	Menu elements listed in this container.
#	Each element must be on separate line.
#	Elements can be grouped on same line by separating them with comma

#[menu infodeck]
#type: deck
#name:
#cursor:
#width:
#scroll:
#enable:
#enter_gcode
#leave_gcode
#items:
#	It accepts only 'card' elements. You are able to switch between different card screens
#	by using encoder or up/down buttons. 

#[menu card1]
#type: card
#name:
#enable:
#content:
#	Card screen content. Each line represents display line.
#	Quotes can be used in the beginning and end of line.
#	Rendered elements are available for output formatting as {0}..{x}. It's always string type.
#items:
#	List of elements in card. Each line represents a single index for content formatting.
#	It's possible to show multiple elements in one place by separating them with comma on single line.
#	If first element is integer then timed cycle is used (integer value is cycle time in seconds)
#	If no integer element then first enabled element is shown.
#	In cycler multiple elements can be grouped into one postition by separating them with |
#	This way only simple menu items can be grouped.
#	Example: 5,prt_time, prt_progress - elements prt_time and prt_progress are switched after 5s
#	Example: msg,xpos|ypos - elements xpos and ypos are grouped and showed together when msg is disabled.

### EXAMPLE MENU ###

### menu main ###
[menu main]
type: list
name: Main Menu
items: 
    octoprint
    sdcard
    control
    temp
    filament
    prepare
    test

### menu octoprint ###
[menu octoprint]
type: list
name: OctoPrint
items: 
    octoprint_pause
    octoprint_resume
    octoprint_abort

[menu octoprint_pause]
type: command
enable: toolhead.is_printing
name: Pause printing
gcode: ECHO MSG=@pause

[menu octoprint_resume]
type: command
enable: toolhead.is_printing
name: Resume printing
gcode: ECHO MSG=@resume

[menu octoprint_abort]
type: command
enable: toolhead.is_printing
name: Abort printing
gcode: ECHO MSG=@abort

### menu virtual sdcard ###
[menu sdcard]
type: vsdcard
name: SD Card
items: 
    sdcard_start
    sdcard_resume
    sdcard_pause

[menu sdcard_start]
type: command
enable: !toolhead.is_printing
name: Start printing
gcode: M24

[menu sdcard_resume]
type: command
enable: toolhead.is_printing
name: Resume printing
gcode: M24

[menu sdcard_pause]
type: command
enable: toolhead.is_printing
name: Pause printing
gcode: M25

### menu control ###
[menu control]
type: list
name: Control
items: 
    control_home
    control_homez
    control_homexy
    move_10mm
    move_1mm
    move_01mm
    control_disable
    control_fanonoff
    control_fanspeed
    control_caselightonoff
    control_caselightpwm

[menu control_home]
type: command
name: Home All
gcode: G28
enable: !toolhead.is_printing

[menu control_homez]
type: command
enable: !toolhead.is_printing
name: Home Z
gcode: G28 Z

[menu control_homexy]
type: command
enable: !toolhead.is_printing
name: Home X/Y
gcode: G28 X Y

[menu control_disable]
type: command
name: Disable steppers
gcode: 
	M84
	M18

[menu control_fanonoff]
type: input
enable: fan.is_enabled
name: Fan {1:3s}
parameter: fan.speed
transform:
	('OFF','ON')
	(0,255)
input_min: 0
input_max: 1
input_step: 1
gcode: M106 S{2:d}

[menu control_fanspeed]
type: input
enable: fan.is_enabled
name: Fan speed: {1:3d}%
parameter: fan.speed
transform: 
	(0,1,0,100)
	(0,1,0,255)
input_min: 0
input_max: 1
input_step: 0.01
gcode: M106 S{2:d}

[menu control_caselightonoff]
type: input
enable: output_pin.caselight.is_enabled
name: Case light: {1:3s}
parameter: output_pin.caselight.value
transform:
	('OFF','ON')
	(0,1)
input_min: 0
input_max: 1
input_step: 1
gcode: SET_PIN PIN=caselight VALUE={2}

[menu control_caselightpwm]
type: input
enable: output_pin.caselight.is_enabled
name: Case light: {0:4%}
parameter: output_pin.caselight.value
input_min: 0.0
input_max: 1.0
input_step: 0.01
gcode: SET_PIN PIN=output_pin.caselight VALUE={0:.2f}

### menu move ###
[menu move_10mm]
type: list
enable: !toolhead.is_printing
name: Move 10mm
items: 
    move_10mm_z
    move_10mm_x, move_10mm_y
    move_10mm_e

[menu move_1mm]
type: list
enable: !toolhead.is_printing
name: Move 1mm
items: 
    move_1mm_z
    move_1mm_x, move_1mm_y
    move_1mm_e

[menu move_01mm]
type: list
enable: !toolhead.is_printing
name: Move 0.1mm
items: 
    move_01mm_z
    move_01mm_x, move_01mm_y
    move_01mm_e

[menu move_10mm_x]
type: input
name: "X:{0:05.1f} "
parameter: toolhead.xpos
input_min: 0
input_max: 200.0
input_step: 10.0
gcode: G1 X{0:.1f}

[menu move_10mm_y]
type: input
name: "Y:{0:05.1f} "
parameter: toolhead.ypos
input_min: 0
input_max: 200.0
input_step: 10.0
gcode: G1 Y{0:.1f}

[menu move_10mm_z]
type: input
enable: !toolhead.is_printing
name: "Move Z:{0:05.1f}"
parameter: toolhead.zpos
input_min: 0
input_max: 200.0
input_step: 10.0
gcode: G1 Z{0:.1f}
	
[menu move_10mm_e]
type: input
enable: !toolhead.is_printing
name: "Move E:{0:+06.1f}"
parameter: 0
input_min: -250.0
input_max: 250.0
input_step: 10.0
gcode: G1 E{0:.1f}

[menu move_1mm_x]
type: input
name: "X:{0:05.1f} "
parameter: toolhead.xpos
input_min: 0
input_max: 100.0
input_step: 1.0
gcode: G1 X{0:.1f}

[menu move_1mm_y]
type: input
name: "Y:{0:05.1f} "
parameter: toolhead.ypos
input_min: 0
input_max: 100.0
input_step: 1.0
gcode: G1 Y{0:.1f}

[menu move_1mm_z]
type: input
enable: !toolhead.is_printing
name: "Move Z:{0:05.1f}"
parameter: toolhead.zpos
input_min: 0
input_max: 100.0
input_step: 1.0
gcode: G1 Z{0:.1f}
	
[menu move_1mm_e]
type: input
enable: !toolhead.is_printing
name: "Move E:{0:+06.1f}"
parameter: 0
input_min: -100.0
input_max: 100.0
input_step: 1.0
gcode: G1 E{0:.1f}

[menu move_01mm_x]
type: input
name: "X:{0:05.1f} "
parameter: toolhead.xpos
input_min: 0
input_max: 50.0
input_step: 0.1
gcode: G1 X{0:.1f}

[menu move_01mm_y]
type: input
name: "Y:{0:05.1f} "
parameter: toolhead.ypos
input_min: 0
input_max: 50.0
input_step: 0.1
gcode: G1 Y{0:.1f}

[menu move_01mm_z]
type: input
enable: !toolhead.is_printing
name: "Move Z:{0:05.1f}"
parameter: toolhead.zpos
input_min: 0
input_max: 50.0
input_step: 0.1
gcode: G1 Z{0:.1f}
	
[menu move_01mm_e]
type: input
enable: !toolhead.is_printing
name: "Move E:{0:+06.1f}"
parameter: 0
input_min: -50.0
input_max: 50.0
input_step: 0.1
gcode: G1 E{0:.1f}

### menu temperature ###
[menu temp]
type: list
name: Temperature
items: 
    temp_hotend0_current, temp_hotend0_target
    temp_hotend1_current, temp_hotend1_target
    temp_hotbed_current, temp_hotbed_target
    temp_preheat_pla
    temp_preheat_abs
    temp_cooldown

[menu temp_hotend0_current]
type: item
enable: extruder0.is_enabled
name: "Ex0:{0:4.0f} T"
parameter: extruder0.temperature

[menu temp_hotend0_target]
type: input
enable: extruder0.is_enabled
name: "{0:4.0f}"
parameter: extruder0.target
input_min: 0
input_max: 250
input_step: 1
gcode: M104 T0 S{0:.0f}

[menu temp_hotend1_current]
type: item
enable: extruder1.is_enabled
name: "Ex1:{0:4.0f} T"
parameter: extruder1.temperature

[menu temp_hotend1_target]
type: input
enable: extruder1.is_enabled
name: "{0:4.0f}"
parameter: extruder1.target
input_min: 0
input_max: 250
input_step: 1
gcode: M104 T1 S{0:.0f}

[menu temp_hotbed_current]
type: item
enable: heater_bed.is_enabled
name: "Bed:{0:4.0f} T"
parameter: heater_bed.temperature

[menu temp_hotbed_target]
type: input
enable: heater_bed.is_enabled
name: "{0:4.0f}"
parameter: heater_bed.target
input_min: 0
input_max: 130
input_step: 1
gcode: M140 S{0:.0f}

[menu temp_preheat_pla]
type: list
name: Preheat PLA
items:
    temp_preheat_pla_all
    temp_preheat_pla_end
    temp_preheat_pla_bed

[menu temp_preheat_pla_all]
type: command
enable: extruder0.is_enabled,heater_bed.is_enabled
name: Preheat all
gcode:
    M140 S60
    M104 S200

[menu temp_preheat_pla_end]
type: command
enable: extruder0.is_enabled
name: Preheat hotend
gcode: M104 S200

[menu temp_preheat_pla_bed]
type: command
enable: heater_bed.is_enabled
name: Preheat hotbed
gcode: M140 S60

[menu temp_preheat_abs]
type: list
name: Preheat ABS
items: 
    temp_preheat_abs_all
    temp_preheat_abs_end
    temp_preheat_abs_bed

[menu temp_preheat_abs_all]
type: command
enable: extruder0.is_enabled,heater_bed.is_enabled
name: Preheat all
gcode:
    M140 S110
    M104 S245

[menu temp_preheat_abs_end]
type: command
enable: extruder0.is_enabled
name: Preheat hotend
gcode: M104 S245

[menu temp_preheat_abs_bed]
type: command
enable: heater_bed.is_enabled
name: Preheat hotbed
gcode: M140 S110

[menu temp_cooldown]
type: list
name: Cooldown
items: 
    temp_cooldown_all
    temp_cooldown_end
    temp_cooldown_bed

[menu temp_cooldown_all]
type: command
enable: extruder0.is_enabled,heater_bed.is_enabled
name: Cooldown all
gcode:
    M104 S0
    M140 S0
    
[menu temp_cooldown_end]
type: command
enable: extruder0.is_enabled
name: Cooldown hotend
gcode: M104 S0

[menu temp_cooldown_bed]
type: command
enable: heater_bed.is_enabled
name: Cooldown hotbed
gcode: M140 S0

### menu filament ###

[menu filament]
type: list
name: Filament
items: 
    temp_hotend0_current, temp_hotend0_target
    filament_unload
    filament_load
    filament_feed

[menu filament_load]
type: command
name: Load Filament
gcode: 
    G1 E200 F1000
    G1 E100 F300

[menu filament_unload]
type: command
name: Unload Filament
gcode: 
    G1 E-200 F1000
    G1 E-200 F1800

[menu filament_feed]
type: input
name: Feed Filament: {0:.1f}
parameter: toolhead.epos
input_step: 0.1
gcode: G1 E{0:.1f} F30


### menu prepare ###

[menu prepare]
type: list
enable: !toolhead.is_printing
name: Prepare
items: 
    prepare_delta_calib
    prepare_bedprobe
    prepare_host_restart
    prepare_firmware_restart

[menu prepare_host_restart]
type: command
enable: !toolhead.is_printing
name: Restart host
gcode: RESTART

[menu prepare_firmware_restart]
type: command
enable: !toolhead.is_printing
name: Restart FW
gcode: FIRMWARE_RESTART

[menu prepare_delta_calib]
type: command
enable: !toolhead.is_printing
name: Delta calibrate
gcode: DELTA_CALIBRATE

[menu prepare_bedprobe]
type: command
enable: !toolhead.is_printing
name: Bed probe
gcode: PROBE

[menu prepare_hotend_pid_tuning]
type: command
enable: !toolhead.is_printing, extruder0.is_enabled 
name: Tune Hotend PID
gcode: PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu prepare_hotbed_pid_tuning]
type: command
enable: !toolhead.is_printing, heater_bed.is_enabled 
name: Tune Hotbed PID
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

### test menu ###
[menu test]
type: item
name: This is very long item name
width: 18
scroll: true

### info screens ###

[menu infoscreen]
type: deck
name: Deck
items: card1, card2, card3, card4
enter_gcode: M117 Menu info system is ready!

[menu card1]
type: card
name: Card 1
content:
	"E:{0:3s}/{1:3s} {2}"
	"B:{3:3s}/{4:3s} Fr{5}"
	"Fan{6}   {7}"
	"[{8}] {9}"
	
items:
	card_hotend0_current
	card_hotend0_target
	card_zpos
	card_hotbed_current
	card_hotbed_target
	card_frpeed
	card_fnspeed
	5,card_prt_time, card_prt_progress
	card_status
	card_msg,card_xpos|card_ypos

[menu card2]
type: card
name: Card 2
content:
	"E0:{0:3s}/{1:3s} B:{4:3s}/{5:3s}"
	"E1:{2:3s}/{3:3s} {6}"
	"Fr{7}Fn{8} {9}"
	"{10}"
	
items:
	card_hotend0_current
	card_hotend0_target
	card_hotend1_current
	card_hotend1_target
	card_hotbed_current
	card_hotbed_target
	card_zpos
	card_frpeed_in
	card_fnspeed_in
	5,card_prt_time, card_prt_progress
	card_msg
	
[menu card3]
type: card
name: Card 3
content:
	"E:{0:3s}/{1:3s} B:{2:3s}/{3:3s}"
	"{4}{5}{6}"
	"Fr{7} Pr{8} T{9}"
	"{10}"
	
items:
	card_hotend0_current
	card_hotend0_target
	card_hotbed_current
	card_hotbed_target
	card_xpos
	card_ypos
	card_zpos
	card_frpeed_in
	card_prt_progress_1
	card_prt_time_1
	card_msg

[menu card4]
type: card
name: Card 4
content:
	"[{0}][{1}]"
	"[{2}]"
	"[{3}][{4}]"
	"[{5}][{6}]"	
items: 
	octoprint
	control
	temp
	filament
	sdcard
	prepare
	main
	
[menu card_hotend0_current]
type: item
enable: extruder0.is_enabled
name: "{1:3.0f}"
parameter: extruder0.temperature
transform: 'abs'

[menu card_hotend0_target]
type: input
enable: extruder0.is_enabled
name: "{1:.0f}"
parameter: extruder0.target
transform: 'abs'
input_min: 0
input_max: 250
input_step: 1
gcode: M104 T0 S{0:.0f}

[menu card_hotend1_current]
type: item
enable: extruder1.is_enabled
name: "{1:3.0f}"
parameter: extruder1.temperature
transform: 'abs'

[menu card_hotend1_target]
type: input
enable: extruder1.is_enabled
name: "{1:.0f}"
parameter: extruder1.target
transform: 'abs'
input_min: 0
input_max: 250
input_step: 1
gcode: M104 T1 S{0:.0f}

[menu card_hotbed_current]
type: item
enable: heater_bed.is_enabled
name: "{1:3.0f}"
parameter: heater_bed.temperature
transform: 'abs'

[menu card_hotbed_target]
type: input
enable: heater_bed.is_enabled
name: "{1:.0f}"
parameter: heater_bed.target
transform: 'abs'
input_min: 0
input_max: 250
input_step: 1
gcode: M140 S{0:.0f}

[menu card_zpos]
type: item
name: "Z{0:6.2f}"
parameter: toolhead.zpos

[menu card_frpeed]
type: item
name: "{0:5.0%}"
parameter: gcode.speed_factor

[menu card_fnspeed]
type: item
name: "{0:4.0%}"
parameter: fan.speed

[menu card_frpeed_in]
type: input
name: "{0:4.0%}"
parameter: gcode.speed_factor
transform:
	(0,1,0,255)
input_min: 0
input_max: 1
input_step: 0.01
gcode: M220 S{1:d}

[menu card_fnspeed_in]
type: input
enable: fan.is_enabled
name: "{0:4.0%}"
parameter: fan.speed
transform:
	(0,1,0,255)
input_min: 0
input_max: 1
input_step: 0.01
gcode: M106 S{1:d}

[menu card_prt_time]
type: item
name: "T {1:02d}:{2:02d}"
transform: 
	'minutes'
	'seconds'
parameter: toolhead.printing_time

[menu card_prt_progress]
type: item
name: "Pr{0:5.0%}"
parameter: display.progress

[menu card_prt_time_1]
type: item
name: "{1:02d}:{2:02d}"
transform: 
	'minutes'
	'seconds'
parameter: toolhead.printing_time

[menu card_prt_progress_1]
type: item
name: "{0:4.0%}"
parameter: display.progress

[menu card_msg]
enable: display.message.visible
type: item
scroll: true
width: 16
name: "{0}"
parameter: display.message

[menu card_status]
type: item
name: "{0}"
width: 1
parameter: toolhead.status

[menu card_xpos]
type: item
name: "X{0:05.1f}"
parameter: toolhead.xpos

[menu card_ypos]
type: item
name: "Y{0:05.1f}"
parameter: toolhead.ypos
