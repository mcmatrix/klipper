# This file serves as documentation for config parameters. One may
# copy and edit this file to configure a new menu layout.
# The snippets in this file may be copied into the main printer.cfg file.
# See the "example.cfg" file for description of common config parameters.

# Menu has default variables defined in menu.cfg
# For example, accessible as printer.menu.default.hotend_target_max
# Variables can be modified in realtime by using 'Setup -> Edit defaults' menu
# Don't forget to save your config by using 'Setup -> Save config' after modifing defaults.

# Available options in menu Jinja2 context:
# Read-only attributes for menu element:
#   menu.is_editing - is element in editing mode
#   menu.width - element width (number of display columns)
#   menu.ns - element namespace
#   menu.input - input value, only available in input script context
# List of actions for menu element:
#   menu.back(force) - will execute menu back command, optional boolean parameter <force>.
#                      When <force> is set True then it will also stop editing. Default value is False
#   menu.exit(force) - will execute menu exit command, optional boolean parameter <force> default value False
#                      When <force> is set True then it will also stop editing. Default value is False
#   menu.send_event(name, event, [<arg1> [,<arg2> ...]]) - will emit event 'menu:name:event' with args to klippers event system.
#                      Event first argument is always source element instance
#   menu.script_by_name(name, from) - other scripts of <from> item, can be included or imported in jinja2.
#                                     when <from> is not given then default is '.' itself and '..' is parent.
#   menu.set_default(name, value) - will set <value> for default variable <name>
#   menu.reset_defaults() - will reset saved user default values to the factory defaults

# Common parameters available for all menu config sections.
#[menu some_name]
#type:
#   One of command, input, list, text:
#       command - basic menu element with various script triggers
#       input - same like 'command' but has value changing capabilities.
#               Press will start/stop edit mode.
#       list - it allows for menu items to be grouped together in a scrollable list.
#              Add to the list by creating menu configurations
#              using "some_list" as a prefix - for example: [menu some_list some_item_in_the_list]
#       text - item to display scrollable text.
#              Press will enter/leave from text.
#       vsdlist - same as 'list' but will append files from virtual sdcard (will be removed in the future)
#name:
#   Name of menu item - evaluated as a template.
#enable:
#   Template that evaluates to True or False.
#cursor:
#   It allows to change cursor character for selected menu element.
#   The default is >
#   This parameter is optional.
#index:
#   Position where an item needs to be inserted in list
#   By default the item is added at the end. This parameter is optional.
#scroll:
#   This attribute accepts True or False. When this is enabled then
#   names longer than display size are scrolled back and forth.
#   The default is False. This parameter is optional.

#[menu some_list]
#type: list
#name:
#enable:
#cursor:
#scroll:
#show_title:
#   Show container name next to back .. element.
#   The default is True. This parameter is optional.
#script_leave:
#script_enter:
#   Script to run on entering to list and leaving from list.
#   Evaluated as a template.

#[menu some_list some_text]
#type: text
#name:
#enable:
#cursor:
#scroll:
#script_render:
#   Content script rendered once you have entered. Evaluated as a template.

#[menu some_list some_command]
#type: command
#name:
#enable:
#cursor:
#scroll:
#script_press:
#   Script to run on click button press. Evaluated as a template.

#[menu some_list some_input]
#type: input
#name:
#enable:
#cursor:
#reverse:
#   When enabled it will reverse increment and decrement directions for input.
#   The default is False. This parameter is optional.
#input:
#   Initial value to use when editing - evaluated as a template.
#   Result must be float.
#input_min:
#   Minimum value of range - evaluated as a template.  Default -99999.
#input_max:
#   Maximum value of range - evaluated as a template.  Default 99999.
#input_step:
#   Editing step - Must be a positive integer or float value.
#input_step2:
#   Editing step for fast rate - Must be a positive integer or float value.
#   The default is 0 (input_step will be used instead)
#script_press:
#   Script to run on click button press. Evaluated as a template.
#script_longpress:
#   Script to run on click button longpress. Evaluated as a template.
#script_change:
#   Script to run in realtime when input item value is changed in edit mode.
